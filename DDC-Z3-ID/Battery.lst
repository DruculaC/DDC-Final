C51 COMPILER V9.51   BATTERY                                                               08/16/2014 14:14:27 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\Library\Battery.c BROWSE INCDIR(..\Library) DEBUG OB
                    -JECTEXTEND PRINT(.\Battery.lst) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2                  Battery.c (v1.00)
   3                  
   4                  µç³ØµçÁ¿ÅÐ¶Ï
   5          ---------------------------------------------------*/   
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Battery.h"
  11          #include "voice.h"
  12          #include "Delay.h"
  13          
  14          
  15          /*----------------------------------------------------
  16                  verifybattery()
  17                  voice alarm for battery status
  18          -----------------------------------------------------*/
  19          
  20          void verifybattery(tWord Check2)
  21                  {       
  22   1              // battery is sufficient, battery > 50.7V, 3.72V/4.93V
  23   1              if((Check2 >= 0x304))
  24   1                      {
  25   2                      voice_EN = 1;
  26   2                      SC_Speech(28);          
  27   2                      Delay(60);
  28   2                      voice_EN = 0;
  29   2                      }
  30   1         // 20km, 49.4V < battery < 50.7V, 3.66V/4.93V
  31   1              else if((Check2 < 0x302)&&(Check2 >= 0x2f8))            
  32   1                      {
  33   2                      voice_EN = 1;
  34   2                      SC_Speech(10);  
  35   2                      Delay(100);
  36   2                      voice_EN = 0;
  37   2                      }
  38   1              // 15km, 47.6V < battery < 49.4V, 3.58V/4.93V 
  39   1              else if((Check2 < 0x2f6)&&(Check2 >= 0x2e7))            
  40   1                      {
  41   2                      voice_EN = 1;
  42   2                      SC_Speech(9);   
  43   2                      Delay(100);
  44   2                      voice_EN = 0;
  45   2                      }
  46   1              // 10km, 45.7V < battery <47.6V, 3.49V/4.93V
  47   1              else if((Check2 < 0x2e5)&&(Check2 >= 0x2d5))            
  48   1                      {
  49   2                      voice_EN = 1;
  50   2                      SC_Speech(8);   
  51   2                      Delay(100);
  52   2                      voice_EN = 0;
  53   2                      }
  54   1              // 5km, 44.3V < battery < 45.7V, 3.42V/4.93V
C51 COMPILER V9.51   BATTERY                                                               08/16/2014 14:14:27 PAGE 2   

  55   1              else if((Check2 < 0x2d3)&&(Check2 >= 0x2c6))            
  56   1                      {
  57   2                      voice_EN =1;
  58   2                      SC_Speech(7);   
  59   2                      Delay(100);
  60   2                      voice_EN = 0;
  61   2                      }                     
  62   1              // battery is low, battery < 44.3V, 3.42V/4.93V
  63   1              else if(Check2 < 0x2c4)
  64   1                      {
  65   2                      motorBAT_low_speech();
  66   2                      }
  67   1              }
  68          
  69          /*----------------------------------------------------
  70                  verifybattery()
  71                  voice alarm for battery status
  72          
  73          void verifybattery(tWord Check2)
  74                  {       
  75                  // battery is sufficient, battery > 50.7V, 3.26V/4.93V
  76                  if((Check2 >= 0x2a4))
  77                          {
  78                          voice_EN = 1;
  79                          SC_Speech(28);          
  80                          Delay(60);
  81                          voice_EN = 0;
  82                          }
  83             // 20km, 49.4V < battery < 50.7V, 3.17V/4.93V
  84                  else if((Check2 < 0x2a2)&&(Check2 >= 0x291))            
  85                          {
  86                          voice_EN = 1;
  87                          SC_Speech(10);  
  88                          Delay(100);
  89                          voice_EN = 0;
  90                          }
  91                  // 15km, 47.6V < battery < 49.4V, 3.07V/4.93V 
  92                  else if((Check2 < 0x28f)&&(Check2 >= 0x27c))            
  93                          {
  94                          voice_EN = 1;
  95                          SC_Speech(9);   
  96                          Delay(100);
  97                          voice_EN = 0;
  98                          }
  99                  // 10km, 45.7V < battery <47.6V, 2.95V/4.93V
 100                  else if((Check2 < 0x27a)&&(Check2 >= 0x263))            
 101                          {
 102                          voice_EN = 1;
 103                          SC_Speech(8);   
 104                          Delay(100);
 105                          voice_EN = 0;
 106                          }
 107                  // 5km, 44.3V < battery < 45.7V, 2.86V/4.93V
 108                  else if((Check2 < 0x261)&&(Check2 >= 0x250))            
 109                          {
 110                          voice_EN =1;
 111                          SC_Speech(7);   
 112                          Delay(100);
 113                          voice_EN = 0;
 114                          }                     
 115                  // battery is low, battery < 44.3V, 3.42V/4.93V
 116                  else if(Check2 < 0x24e)
C51 COMPILER V9.51   BATTERY                                                               08/16/2014 14:14:27 PAGE 3   

 117                          {
 118                          motorBAT_low_speech();
 119                          }
 120                  }
 121          -----------------------------------------------------*/
 122          
 123          /*---------------------------------------------------
 124                  end of file
 125          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    180    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
