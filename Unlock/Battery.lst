C51 COMPILER V9.51   BATTERY                                                               08/28/2014 15:47:45 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\Library\Battery.c BROWSE INCDIR(..\Library) DEBUG OB
                    -JECTEXTEND PRINT(.\Battery.lst) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2                  Battery.c (v1.00)
   3                  
   4                  µç³ØµçÁ¿ÅÐ¶Ï
   5          ---------------------------------------------------*/   
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Battery.h"
  11          #include "voice.h"
  12          #include "Delay.h"
  13          
  14          
  15          /*----------------------------------------------------
  16                  verifybattery()
  17                  voice alarm for battery status
  18          
  19          void verifybattery(tWord Check2)
  20                  {       
  21                  // battery is sufficient, battery > 50.7V, 3.72V/4.93V
  22                  if((Check2 >= 0x304))
  23                          {
  24                          voice_EN = 1;
  25                          SC_Speech(28);          
  26                          Delay(60);
  27                          voice_EN = 0;
  28                          }
  29             // 20km, 49.4V < battery < 50.7V, 3.66V/4.93V
  30                  else if((Check2 < 0x302)&&(Check2 >= 0x2f8))            
  31                          {
  32                          voice_EN = 1;
  33                          SC_Speech(10);  
  34                          Delay(100);
  35                          voice_EN = 0;
  36                          }
  37                  // 15km, 47.6V < battery < 49.4V, 3.58V/4.93V 
  38                  else if((Check2 < 0x2f6)&&(Check2 >= 0x2e7))            
  39                          {
  40                          voice_EN = 1;
  41                          SC_Speech(9);   
  42                          Delay(100);
  43                          voice_EN = 0;
  44                          }
  45                  // 10km, 45.7V < battery <47.6V, 3.49V/4.93V
  46                  else if((Check2 < 0x2e5)&&(Check2 >= 0x2d5))            
  47                          {
  48                          voice_EN = 1;
  49                          SC_Speech(8);   
  50                          Delay(100);
  51                          voice_EN = 0;
  52                          }
  53                  // 5km, 44.3V < battery < 45.7V, 3.42V/4.93V
  54                  else if((Check2 < 0x2d3)&&(Check2 >= 0x2c6))            
C51 COMPILER V9.51   BATTERY                                                               08/28/2014 15:47:45 PAGE 2   

  55                          {
  56                          voice_EN =1;
  57                          SC_Speech(7);   
  58                          Delay(100);
  59                          voice_EN = 0;
  60                          }                     
  61                  // battery is low, battery < 44.3V, 3.42V/4.93V
  62                  else if(Check2 < 0x2c4)
  63                          {
  64                          motorBAT_low_speech();
  65                          }
  66                  }
  67          -----------------------------------------------------*/
  68          
  69          /*----------------------------------------------------
  70                  verifybattery()
  71                  voice alarm for battery status
  72          -----------------------------------------------------*/
  73          
  74          void verifybattery(tWord Check2)
  75                  {       
  76   1              // battery is sufficient, battery > 50.7V, 3.26V/4.93V
  77   1              if((Check2 >= 0x2a4))
  78   1                      {
  79   2                      voice_EN = 1;
  80   2                      SC_Speech(28);          
  81   2                      Delay(60);
  82   2                      voice_EN = 0;
  83   2                      }
  84   1         // 20km, 49.4V < battery < 50.7V, 3.17V/4.93V
  85   1              else if((Check2 < 0x2a2)&&(Check2 >= 0x291))            
  86   1                      {
  87   2                      voice_EN = 1;
  88   2                      SC_Speech(10);  
  89   2                      Delay(100);
  90   2                      voice_EN = 0;
  91   2                      }
  92   1              // 15km, 47.6V < battery < 49.4V, 3.07V/4.93V 
  93   1              else if((Check2 < 0x28f)&&(Check2 >= 0x27c))            
  94   1                      {
  95   2                      voice_EN = 1;
  96   2                      SC_Speech(9);   
  97   2                      Delay(100);
  98   2                      voice_EN = 0;
  99   2                      }
 100   1              // 10km, 45.7V < battery <47.6V, 2.95V/4.93V
 101   1              else if((Check2 < 0x27a)&&(Check2 >= 0x263))            
 102   1                      {
 103   2                      voice_EN = 1;
 104   2                      SC_Speech(8);   
 105   2                      Delay(100);
 106   2                      voice_EN = 0;
 107   2                      }
 108   1              // 5km, 44.3V < battery < 45.7V, 2.86V/4.93V
 109   1              else if((Check2 < 0x261)&&(Check2 >= 0x250))            
 110   1                      {
 111   2                      voice_EN =1;
 112   2                      SC_Speech(7);   
 113   2                      Delay(100);
 114   2                      voice_EN = 0;
 115   2                      }                     
 116   1              // battery is low, battery < 44.3V, 
C51 COMPILER V9.51   BATTERY                                                               08/28/2014 15:47:45 PAGE 3   

 117   1              else if(Check2 < 0x24e)
 118   1                      {
 119   2                      motorBAT_low_speech();
 120   2                      }
 121   1              }
 122          
 123          /*---------------------------------------------------
 124                  end of file
 125          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
