C51 COMPILER V9.51   MAIN                                                                  11/30/2014 13:59:49 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE main.c ROM(COMPACT) BROWSE INCDIR(..\Library) DEBUG OBJ
                    -ECTEXTEND

line level    source

   1          /*---------------------------------------------------
   2                  main.c (v1.00)
   3                  
   4                  DDC-F program, for electrocar.
   5          ----------------------------------------------------*/
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "AD.h"
  11          #include "Timer.h"
  12          #include "voice.h"
  13          #include "pwm.h"
  14          #include "Delay.h"
  15          #include "communication.h"
  16          #include "Other.h"
  17          
  18          /*------- Public variable declarations --------------------------*/
  19          extern tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;
  20          extern bit enable_sensor_delayEN;
  21          
  22          // ------ Private variable definitions -----------------------------
  23          bit stolen_alarm_flag = 0;                                      // when host been touch 3 times, this flag 1 before alarm voice present, no
             -t to detect sensor for 1st voice alarm.
  24          bit position_sensor_EN=0;               //Î»ÖÃ´«¸ÐÆ÷£¬¼´µ¹µØÌ§Æð´«¸ÐÆ÷×Ü¿ª¹Ø£¬1µÄÊ±ºò£¬¼ì²âÕâÁ½¸ö´«¸ÐÆ÷
  25          bit host_stolen_alarm1_EN = 0;      //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒôÊ¹ÄÜ
  26          bit host_stolen_alarm2_EN = 0;      //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶þ¶ÎÓïÒôÊ¹ÄÜ
  27          tByte host_stolen_alarm1_count = 0;             //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒô´ÎÊý
  28          tByte host_stolen_alarm2_count = 0;             //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶þ¶ÎÓïÒô´ÎÊý
  29          bit fell_flag=0;                                                //ÅÐ¶ÏÖ÷»úµ¹ÏÂºó£¬ÖÃ1
  30          bit raised_flag=0;                                      //ÅÐ¶ÏÖ÷»ú±»Ì§Æðºó£¬ÖÃ1
  31          tByte sensor_2ndstage_count = 0;                //´«¸ÐÆ÷½øÈëµÚ¶þ½×¶Î¼ì²âÊ±£¬¼ÆËãµÍµçÆ½µÄÊ±¼ä
  32          tWord sensor_3rdstage_time = 0;                 //´«¸ÐÆ÷½øÈëµÚÈý½×¶ÎµÄÊ±¼ä£¬
  33          tByte sensor_3rdstage_effcount = 0;             //´«¸ÐÆ÷½øÈëµÚÈý½×¶Îºó£¬ÓÐÐ§´¥Åö´ÎÊýµÄ¼ÆÊý
  34          tByte sensor_3rdstage_count = 0;                        //´«¸ÐÆ÷½øÈëµÚÈý½×¶Îºó£¬µÍµçÆ½µÄ¼ÆÊý
  35          tWord sensor_3rdstage_interval = 0;             //´«¸ÐÆ÷ÔÚµÚÈý½×¶ÎÖÐ£¬Ã¿´ÎÓÐÐ§µÍµçÆ½¼ÆÊýÖ®¼äµÄÊ±¼ä¼ä¸ô¡£ÔÚÕâÆÚ¼äµÄµÍµ
             -çÆ½²»ÈÏÎªÓÐÐ§¡£
  36          bit raised_fell_flag = 0;                                       //µ¹µØ»òÕßÌ§Æð´¥·¢ºó£¬´Ë±êÖ¾Î»ÖÃ1
  37          tByte sensor_trigger_count=0;           //´«¸ÐÆ÷´¥·¢¼ÆÊý
  38          tWord sensor_2ndstage_time=0;           //´«¸ÐÆ÷½øÈëµÚ¶þ½×¶ÎºóÁ÷ÊÅÊ±¼äµÄ¼ÆÊý
  39          tByte sensor_1ststage_count=0;  //´«¸ÐÆ÷µÚÒ»½×¶ÎÅÐ¶ÏµÍµçÆ½µÄ¼ÆÊý
  40          tByte nearby_away_interval = 0;         //¸½»úÀë¿ªºÍ¿¿½üÊ±£¬ÓïÒôÌáÊ¾ºÍ¿ª¹ØËøµÄÊ±¼ä¼ä¸ô
  41          
  42          tByte raised_alarm_count = 0;    //Ö÷»ú±»Ì§Æðºó£¬Ïò¸½»ú·¢³ö±¨¾¯ÐÅºÅµÄ´ÎÊý
  43          tByte fell_alarm_count=0;        //Ö÷»úµ¹µØºó£¬Ïò¸½»ú·¢³ö±¨¾¯ÐÅºÅµÄ´ÎÊý
  44          tWord timer0_count=0;           // counter for timer0, increment every ticket                   
  45          tByte received_data_buffer[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};             //½ÓÊÕÊý¾Ý»º´æ
  46          bit receive_data_finished_flag = 0;             //½ÓÊÕÕâÒ»´®Êý¾ÝÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  47          tByte data_count = 0;                           //½ÓÊÕÊý¾Ý»º´æµÄÎ»Êý£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊý¾Ý
  48          tByte one_receive_byte = 0;             //½ÓÊÕÊý¾ÝµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
  49          tByte one_receive_byte_count = 0;                       //one_receive_byteÓÐ8Î»£¬´Ë¼ÆÊý±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊýµ½8µÄÊ±ºò±íÃ÷
             -Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  50          bit receive_wire_flag = 1;              //½ÓÊÕÍ¨ÐÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅÐ¶ÏP1.1Ò»´Î
             -¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕýÈ·µÄÏÂ½µÑØ
C51 COMPILER V9.51   MAIN                                                                  11/30/2014 13:59:49 PAGE 2   

  51          tByte receive_HV_count = 0;             //¶¨Ê±Æ÷T1ÔÚÃ»ÓÐÐÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊý£¬Ò»µ©³¬¹ýÄ³¸öÖµ£¬Ôò½«one_receive
             -_byte_countÇå0
  52          tByte receive_LV_count = 0;             //Ã¿´Îtimer1Òç³öÊ±ÅÐ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊý¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  53          tByte fell_wire_time=0;          //µ¹µØ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  54          tByte raise_wire_time=0;                        //Ì§Æð¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  55          tWord raised_fell_number = 0;                           //µ¹µØ»òÕßÌ§Æð³ö·¢ºó£¬¼ÆÊý£¬µ½´ïÒ»¶¨ÊýÖµºó£¬½«ÆäÓë±êÖ¾Î»Ò»ÆðÇåÁã¡£
  56          bit raised_fell_once_flag = 0;                  //raised_fell_flagÊÇ·ñÔø¾­±êÖ¾¹ý£¬Èç¹û±êÖ¾¹ýÔòÖÃ1.È»ºóÖ÷»ú±»»Ö¸´µ¹µØ»òÕß»
             -Ö¸´Ì§ÆðÊ±£¬´Ë±êÖ¾Î»¸´Î»¡£
  57          tByte key_rotated_on_flag=0;                    //µç¶¯³µ¿ªÆô¹Ø±Õ±êÖ¾Î»£¬1±íÊ¾µç¶¯³µ¿ªÆôÁË£¬0±íÊ¾µç¶¯³µ¹Ø±ÕÁË
  58          tWord ADC_check_result = 0;             //×÷ÎªAD¼ì²âÖµ
  59          tByte wire_broken_count = 0;            // ×÷Îª¶ÏÏßºóµÄÊ±¼ä¼ì²â
  60          bit battery_stolen_EN = 0;                      // ×÷Îªµç³Ø±»µÁµÄÊ¹ÄÜ¶Ë
  61          tByte battery_stolen_count = 0; // ×÷Îªµç³Ø±»µÁµÄ±¨¾¯´ÎÊý
  62          bit horizontal_vibration = 0;           // ±íÊ¾´¹Ö±´«¸ÐÆ÷ÔÚÕñ¶¯£¬´ËÊ±¾ÍËã¹ØÔ¿³×£¬Ò²²»ÄÜÖ´ÐÐ¹ØÔ¿³×µÄ²Ù×÷¡
  63          tWord horizontal_vibration_count = 0;   //´¹Ö±´«¸ÐÆ÷´¥·¢ºó£¬¶ÔÊ±¼ä½øÐÐ¼ÆÊý¡£
  64          bit vibration_flag = 0;
  65          tWord vibration_count = 0;
  66          bit wire_broken_flag = 0;                       // ¼ô¶ÏËøÏßµÄ±êÖ¾Î»
  67          extern tByte IDkey5;            // ÓÉÇ°5Î»ÃÜÂë×é³ÉµÄÒì»ò
  68          bit IDkey_flag = 0;                     // µ±ID¿¨¿¿½üÊ±ÈÏÖ¤Í¨¹ýºóÖÃ1£¬
  69          tByte IDkey_count = 0;          // ID¿¨ÈÏÖ¤Í¨¹ýºó£¬¼ÆÊ±1·ÖÖÓ£¬Ê¹Ô¿³×ÄÜ×ª¶¯¡£
  70          bit sensor_EN = 0;
  71          tByte enable_sensor_delay_count = 0;            // ´«¸ÐÆ÷ÑÓ³ÙµÄÊ±¼ä
  72          bit sensor_3rdalarm_flag = 0;
  73          bit wheeled_flag = 0;
  74          tWord wheeled_count = 0;
  75          
  76          tByte lock_time = 0;
  77          
  78          /*-----------------------------------------------------------*/
  79          void main(void)
  80                  {
  81   1              InitTimer(50, 100);
  82   1      
  83   1              Lock_EN = 0;
  84   1              SC_RST = 1;
  85   1              
  86   1              TR0 = 1;
  87   1              
  88   1              while(1)
  89   1                      {
  90   2                      sEOS_Go_To_Sleep();
  91   2                      }
  92   1              }
  93          
  94          /*------------------------------------------------------------------
  95                  timerT0()
  96                  ¶¨Ê±Æ÷0Ã¿´ÎÒç³öºóÖ´ÐÐµÄ²Ù×÷
  97          --------------------------------------------------------------------*/
  98          
  99          void timer0() interrupt interrupt_timer_0_overflow
 100                  {
 101   1              // ÖØ×°ÔÚ¶¨Ê±Æ÷µÄÊ±¼äÉèÖÃ
 102   1              TH0 = timer0_8H;
 103   1              TL0 = timer0_8L;
 104   1      
 105   1              // ÉèÖÃÒ»¸öÃ¿3sµÄ²Ù×÷
 106   1              if(++timer0_count >= 10)                
 107   1                      {
 108   2                      // ½«¼ÆÊýÇå0
 109   2                      timer0_count = 0;
 110   2              transmiter_EN = ~transmiter_EN;
C51 COMPILER V9.51   MAIN                                                                  11/30/2014 13:59:49 PAGE 3   

 111   2                      }               
 112   1                      
 113   1              if(Lock_EN == 1)
 114   1                      {
 115   2                      if(++lock_time >= 50)
 116   2                              {
 117   3                              lock_time = 0;
 118   3                              Lock_EN = 0;
 119   3                              }
 120   2                      }
 121   1              }
 122          
 123          /*------------------------------------------------------------------
 124          
 125                  // Ö÷»ú±»µÁ±¨¾¯
 126                  if(stolen_alarm_flag == 1)              
 127                          {
 128                          // Ö÷»ú±»µÁ±¨¾¯´ÎÊý£¬Ã¿±¨Ò»´Î¼Ó1£¬Èç¹û´óÓÚ2´Î£¬Ôò¼ÌÐø¼Ó1£¬µ½Ò»¶¨Ê±¼äºó£¬½«flagºÍcountÇå0.ÒÔ´ËÀ´±£Ö¤¸½»úÃ
             -¿´Î±¨¾¯ºó£¬ÔÚ¶ÌÊ±¼äÄÚ
 129                          // ÔÙ´ÎÊÕµ½±¨¾¯ÐÅºÅ£¬¾Í²»»á±¨¾¯ÁË¡£
 130                          if(++stolen_alarm_count < 3)
 131                                  {                       
 132                                  // ÓïÒôÌáÊ¾£¬Âí´ïÕñ¶¯
 133                                  Alarm_stolen_speech();          
 134                                  Moto_Vibration();          
 135                                  }
 136                          else
 137                                  {
 138                                  if(stolen_alarm_count >= 1200)
 139                                          {
 140                                          stolen_alarm_count = 0;
 141                                          stolen_alarm_flag = 0;
 142                                          }
 143                                  }
 144                          }       
 145          
 146                  // Ì§ÆðÐÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌÐø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´ÎÌ§ÆðÖ»·¢4±é¡£
 147                  if(raised_alarm_flag == 1)      
 148                          {
 149                          Alarm_raised_speech();          
 150                          Moto_Vibration();         
 151                          raised_alarm_flag = 0;
 152                          }
 153          
 154                  // µ¹µØÐÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌÐø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´Îµ¹µØÖ»·¢4±é¡£
 155                  if(fell_alarm_flag == 1)
 156                          {
 157                          Alarm_fell_speech();              
 158                          Moto_Vibration();         
 159                          fell_alarm_flag=0;
 160                          }
 161          
 162                  // Ö÷»úµçÁ¿³äÂúÌáÊ¾
 163                  if(Host_battery_high_flag == 1)
 164                          {
 165                          Host_battery_high_alarm_speech();               
 166                          Host_battery_high_flag = 0;
 167                          }
 168                          
 169                  if(battery_stolen_EN == 1)
 170                          {
 171                          battery_stolen_speech();
C51 COMPILER V9.51   MAIN                                                                  11/30/2014 13:59:49 PAGE 4   

 172                          battery_stolen_EN = 0;
 173                          }
 174                  
 175                  if(wire_broken_EN == 1)
 176                          {
 177                          wire_broken_speech();
 178                          wire_broken_EN = 0;
 179                          }
 180          --------------------------------------------------------------------*/
 181          
 182          
 183          /*------------------------------------------------------------------
 184                  timerT1()
 185                  ¶¨Ê±Æ÷1Ã¿´ÎÒç³öºóÖ´ÐÐµÄ²Ù×÷
 186          --------------------------------------------------------------------*/
 187                  
 188          void timerT1() interrupt interrupt_timer_1_overflow                     
 189                  {
 190   1              // ÖØ×°ÔÚ¶¨Ê±Æ÷1µÄÉèÖÃ
 191   1              TH1 = timer1_8H;                                
 192   1              TL1 = timer1_8L;
 193   1      
 194   1              receive_byte();
 195   1      
 196   1              receive_word();
 197   1      
 198   1              if(receive_data_finished_flag==1)       //ËµÃ÷½ÓÊÕµ½ÁËÊý¾Ý£¬¿ªÊ¼´¦Àí
 199   1                      {
 200   2                      receive_data_finished_flag=0;   //Çå½ÓÊÕ±êÖ¾
 201   2                      switch(received_data_buffer[2])//½âÎöÖ¸Áî
 202   2                              {
 203   3                              case ComMode_1:
 204   3                                      {       
 205   4                      Lock_EN = 1;
 206   4                                      lock_time = 0;
 207   4                                      }
 208   3                              break;
 209   3                              }
 210   2                      }
 211   1              }
 212          
 213          /*---------------------------------------------------
 214                  end of file
 215          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    161    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     18    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
