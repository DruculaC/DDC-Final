C51 COMPILER V9.51   BATTERY                                                               11/11/2014 13:53:28 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\Library\Battery.c BROWSE INCDIR(..\Library) DEBUG OB
                    -JECTEXTEND PRINT(.\Battery.lst) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2                  Battery.c (v1.00)
   3                  
   4                  µç³ØµçÁ¿ÅÐ¶Ï
   5          ---------------------------------------------------*/   
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Battery.h"
  11          #include "voice.h"
  12          #include "Delay.h"
  13          
  14                                                                   
  15          /*----------------------------------------------------
  16                  verifybattery() - Z2
  17                  voice alarm for battery status without power module
  18          -----------------------------------------------------*/
  19          void verifybattery(tWord Check2)
  20                  {       
  21   1              // battery is sufficient, battery > 50.4V, 3.68V/4.9V
  22   1              if((Check2 >= 0x301))
  23   1                      {
  24   2                      voice_EN = 1;
  25   2                      SC_Speech(28);          
  26   2                      Delay(60);
  27   2                      voice_EN = 0;
  28   2                      }
  29   1         // 20km, 49V < battery < 50.4V, 3.62V/4.9V
  30   1              else if((Check2 < 0x301)&&(Check2 >= 0x2f4))            
  31   1                      {
  32   2                      voice_EN = 1;
  33   2                      SC_Speech(10);  
  34   2                      Delay(100);
  35   2                      voice_EN = 0;
  36   2                      }
  37   1              // 15km, 47.4V < battery < 49V, 3.55V/4.9V 
  38   1              else if((Check2 < 0x2f4)&&(Check2 >= 0x2e5))            
  39   1                      {
  40   2                      voice_EN = 1;
  41   2                      SC_Speech(9);   
  42   2                      Delay(100);
  43   2                      voice_EN = 0;
  44   2                      }
  45   1              // 10km, 45.7V < battery <47.4V, 3.47V/4.9V
  46   1              else if((Check2 < 0x2e5)&&(Check2 >= 0x2d5))            
  47   1                      {
  48   2                      voice_EN = 1;
  49   2                      SC_Speech(8);   
  50   2                      Delay(100);
  51   2                      voice_EN = 0;
  52   2                      }
  53   1              // 5km, 44.4V < battery < 45.7V, 3.41V/4.9V
  54   1              else if((Check2 < 0x2d5)&&(Check2 >= 0x2c8))            
C51 COMPILER V9.51   BATTERY                                                               11/11/2014 13:53:28 PAGE 2   

  55   1                      {
  56   2                      voice_EN =1;
  57   2                      SC_Speech(7);   
  58   2                      Delay(100);
  59   2                      voice_EN = 0;
  60   2                      }                     
  61   1              // battery is low, battery < 44.4V, 
  62   1              else if(Check2 < 0x2c8)
  63   1                      {
  64   2                      motorBAT_low_speech();
  65   2                      }
  66   1              }
  67          
  68          /*----------------------------------------------------
  69                  verifybattery()  - Z4
  70                  voice alarm for battery status with power module
  71          
  72          void verifybattery(tWord Check2)
  73                  {       
  74                  // battery is sufficient, battery > 50.4V, 2.48V/5V
  75                  if((Check2 >= 0x1fb))
  76                          {
  77                          voice_EN = 1;
  78                          SC_Speech(28);          
  79                          Delay(60);
  80                          voice_EN = 0;
  81                          }
  82             // 20km, 49V < battery < 50.4V, 2.42V/5V
  83                  else if((Check2 < 0x1fb)&&(Check2 >= 0x1ef))            
  84                          {
  85                          voice_EN = 1;
  86                          SC_Speech(10);  
  87                          Delay(100);
  88                          voice_EN = 0;
  89                          }
  90                  // 15km, 47.8V < battery < 49V, 2.36V/5V 
  91                  else if((Check2 < 0x1ef)&&(Check2 >= 0x1e3))            
  92                          {
  93                          voice_EN = 1;
  94                          SC_Speech(9);   
  95                          Delay(100);
  96                          voice_EN = 0;
  97                          }
  98                  // 10km, 46.5V < battery <47.8V, 2.3V/5V
  99                  else if((Check2 < 0x1e3)&&(Check2 >= 0x1d7))            
 100                          {
 101                          voice_EN = 1;
 102                          SC_Speech(8);   
 103                          Delay(100);
 104                          voice_EN = 0;
 105                          }
 106                  // 5km, 45.1V < battery < 46.5V, 2.86V/4.93V
 107                  else if((Check2 < 0x1d7)&&(Check2 >= 0x1c9))            
 108                          {
 109                          voice_EN =1;
 110                          SC_Speech(7);   
 111                          Delay(100);
 112                          voice_EN = 0;
 113                          }                     
 114                  // battery is low, battery < 45.1V, 
 115                  else if(Check2 < 0x1c9)
 116                          {
C51 COMPILER V9.51   BATTERY                                                               11/11/2014 13:53:28 PAGE 3   

 117                          motorBAT_low_speech();
 118                          }
 119                  }
 120          -----------------------------------------------------*/
 121          /*---------------------------------------------------
 122                  end of file
 123          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
