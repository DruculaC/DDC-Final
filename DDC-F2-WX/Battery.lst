C51 COMPILER V9.51   BATTERY                                                               11/14/2014 15:17:44 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\Library\Battery.c ROM(COMPACT) BROWSE INCDIR(..\Libr
                    -ary) DEBUG OBJECTEXTEND PRINT(.\Battery.lst) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2                  Battery.c (v1.00)
   3                  
   4                  µç³ØµçÁ¿ÅÐ¶Ï
   5          ---------------------------------------------------*/   
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Battery.h"
  11          #include "voice.h"
  12          #include "Delay.h"
  13          
  14                                                                   
  15          /*----------------------------------------------------
  16                  verifybattery() - Z2
  17                  voice alarm for battery status without power module
  18          void verifybattery(tWord Check2)
  19                  {       
  20                  // battery is sufficient, battery > 50.4V, 3.68V/4.9V
  21                  if((Check2 >= 0x301))
  22                          {
  23                          voice_EN = 1;
  24                          SC_Speech(28);          
  25                          Delay(60);
  26                          voice_EN = 0;
  27                          }
  28             // 20km, 49V < battery < 50.4V, 3.62V/4.9V
  29                  else if((Check2 < 0x301)&&(Check2 >= 0x2f4))            
  30                          {
  31                          voice_EN = 1;
  32                          SC_Speech(10);  
  33                          Delay(100);
  34                          voice_EN = 0;
  35                          }
  36                  // 15km, 47.4V < battery < 49V, 3.55V/4.9V 
  37                  else if((Check2 < 0x2f4)&&(Check2 >= 0x2e5))            
  38                          {
  39                          voice_EN = 1;
  40                          SC_Speech(9);   
  41                          Delay(100);
  42                          voice_EN = 0;
  43                          }
  44                  // 10km, 45.7V < battery <47.4V, 3.47V/4.9V
  45                  else if((Check2 < 0x2e5)&&(Check2 >= 0x2d5))            
  46                          {
  47                          voice_EN = 1;
  48                          SC_Speech(8);   
  49                          Delay(100);
  50                          voice_EN = 0;
  51                          }
  52                  // 5km, 44.4V < battery < 45.7V, 3.41V/4.9V
  53                  else if((Check2 < 0x2d5)&&(Check2 >= 0x2c8))            
  54                          {
C51 COMPILER V9.51   BATTERY                                                               11/14/2014 15:17:44 PAGE 2   

  55                          voice_EN =1;
  56                          SC_Speech(7);   
  57                          Delay(100);
  58                          voice_EN = 0;
  59                          }                     
  60                  // battery is low, battery < 44.4V, 
  61                  else if(Check2 < 0x2c8)
  62                          {
  63                          motorBAT_low_speech();
  64                          }
  65                  }
  66          -----------------------------------------------------*/
  67          /*----------------------------------------------------
  68                  verifybattery()  - Z4
  69                  voice alarm for battery status with power module
  70          -----------------------------------------------------*/
  71          void verifybattery(tWord Check2)
  72                  {       
  73   1              // battery is sufficient, battery > 50.4V, 2.48V/5V
  74   1              if((Check2 >= 0x1fb))
  75   1                      {
  76   2                      voice_EN = 1;
  77   2                      SC_Speech(28);          
  78   2                      Delay(60);
  79   2                      voice_EN = 0;
  80   2                      }
  81   1         // 20km, 49V < battery < 50.4V, 2.42V/5V
  82   1              else if((Check2 < 0x1fb)&&(Check2 >= 0x1ef))            
  83   1                      {
  84   2                      voice_EN = 1;
  85   2                      SC_Speech(10);  
  86   2                      Delay(100);
  87   2                      voice_EN = 0;
  88   2                      }
  89   1              // 15km, 47.8V < battery < 49V, 2.36V/5V 
  90   1              else if((Check2 < 0x1ef)&&(Check2 >= 0x1e3))            
  91   1                      {
  92   2                      voice_EN = 1;
  93   2                      SC_Speech(9);   
  94   2                      Delay(100);
  95   2                      voice_EN = 0;
  96   2                      }
  97   1              // 10km, 46.5V < battery <47.8V, 2.3V/5V
  98   1              else if((Check2 < 0x1e3)&&(Check2 >= 0x1d7))            
  99   1                      {
 100   2                      voice_EN = 1;
 101   2                      SC_Speech(8);   
 102   2                      Delay(100);
 103   2                      voice_EN = 0;
 104   2                      }
 105   1              // 5km, 45.1V < battery < 46.5V, 2.86V/4.93V
 106   1              else if((Check2 < 0x1d7)&&(Check2 >= 0x1c9))            
 107   1                      {
 108   2                      voice_EN =1;
 109   2                      SC_Speech(7);   
 110   2                      Delay(100);
 111   2                      voice_EN = 0;
 112   2                      }                     
 113   1              // battery is low, battery < 45.1V, 
 114   1              else if(Check2 < 0x1c9)
 115   1                      {
 116   2                      motorBAT_low_speech();
C51 COMPILER V9.51   BATTERY                                                               11/14/2014 15:17:44 PAGE 3   

 117   2                      }
 118   1              }
 119          /*---------------------------------------------------
 120                  end of file
 121          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    177    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
