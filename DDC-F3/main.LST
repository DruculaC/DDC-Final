C51 COMPILER V9.51   MAIN                                                                  11/14/2014 13:39:24 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE main.c ROM(COMPACT) BROWSE INCDIR(..\Library) DEBUG OBJ
                    -ECTEXTEND

line level    source

   1          /*---------------------------------------------------
   2                  main.c (v1.00)
   3                  
   4                  DDC-F program, for electrocar.
   5          ----------------------------------------------------*/
   6          
   7          #include "main.h"             
   8          #include "port.h"
   9          
  10          #include "AD.h"
  11          #include "Timer.h"
  12          #include "voice.h"
  13          #include "pwm.h"
  14          #include "Delay.h"
  15          #include "communication.h"
  16          #include "Other.h"
  17          
  18          /*------- Public variable declarations --------------------------*/
  19          extern tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;
  20          extern bit enable_sensor_delayEN;
  21          
  22          bit stolen_alarm_flag = 0;                                      // when host been touch 3 times, this flag 1 before alarm voice present, no
             -t to detect sensor for 1st voice alarm.
  23          bit position_sensor_EN=0;               //Î»ÖÃ´«¸ÐÆ÷£¬¼´µ¹µØÌ§Æð´«¸ÐÆ÷×Ü¿ª¹Ø£¬1µÄÊ±ºò£¬¼ì²âÕâÁ½¸ö´«¸ÐÆ÷
  24          bit host_stolen_alarm1_EN = 0;      //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒôÊ¹ÄÜ
  25          bit host_stolen_alarm2_EN = 0;      //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶þ¶ÎÓïÒôÊ¹ÄÜ
  26          tByte host_stolen_alarm1_count = 0;             //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒô´ÎÊý
  27          tByte host_stolen_alarm2_count = 0;             //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶þ¶ÎÓïÒô´ÎÊý
  28          bit fell_flag=0;                                                //ÅÐ¶ÏÖ÷»úµ¹ÏÂºó£¬ÖÃ1
  29          bit raised_flag=0;                                      //ÅÐ¶ÏÖ÷»ú±»Ì§Æðºó£¬ÖÃ1
  30          tByte sensor_2ndstage_count = 0;                //´«¸ÐÆ÷½øÈëµÚ¶þ½×¶Î¼ì²âÊ±£¬¼ÆËãµÍµçÆ½µÄÊ±¼ä
  31          tWord sensor_3rdstage_time = 0;                 //´«¸ÐÆ÷½øÈëµÚÈý½×¶ÎµÄÊ±¼ä£¬
  32          tByte sensor_3rdstage_effcount = 0;             //´«¸ÐÆ÷½øÈëµÚÈý½×¶Îºó£¬ÓÐÐ§´¥Åö´ÎÊýµÄ¼ÆÊý
  33          tByte sensor_3rdstage_count = 0;                        //´«¸ÐÆ÷½øÈëµÚÈý½×¶Îºó£¬µÍµçÆ½µÄ¼ÆÊý
  34          tWord sensor_3rdstage_interval = 0;             //´«¸ÐÆ÷ÔÚµÚÈý½×¶ÎÖÐ£¬Ã¿´ÎÓÐÐ§µÍµçÆ½¼ÆÊýÖ®¼äµÄÊ±¼ä¼ä¸ô¡£ÔÚÕâÆÚ¼äµÄµÍµ
             -çÆ½²»ÈÏÎªÓÐÐ§¡£
  35          bit raised_fell_flag = 0;                                       //µ¹µØ»òÕßÌ§Æð´¥·¢ºó£¬´Ë±êÖ¾Î»ÖÃ1
  36          tByte sensor_trigger_count=0;           //´«¸ÐÆ÷´¥·¢¼ÆÊý
  37          tWord sensor_2ndstage_time=0;           //´«¸ÐÆ÷½øÈëµÚ¶þ½×¶ÎºóÁ÷ÊÅÊ±¼äµÄ¼ÆÊý
  38          tByte sensor_1ststage_count=0;  //´«¸ÐÆ÷µÚÒ»½×¶ÎÅÐ¶ÏµÍµçÆ½µÄ¼ÆÊý
  39          tByte nearby_away_interval = 0;         //¸½»úÀë¿ªºÍ¿¿½üÊ±£¬ÓïÒôÌáÊ¾ºÍ¿ª¹ØËøµÄÊ±¼ä¼ä¸ô
  40          
  41          tByte raised_alarm_count = 0;    //Ö÷»ú±»Ì§Æðºó£¬Ïò¸½»ú·¢³ö±¨¾¯ÐÅºÅµÄ´ÎÊý
  42          tByte fell_alarm_count=0;        //Ö÷»úµ¹µØºó£¬Ïò¸½»ú·¢³ö±¨¾¯ÐÅºÅµÄ´ÎÊý
  43          tWord timer0_count=0;           // counter for timer0, increment every ticket                   
  44          tByte received_data_buffer[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};             //½ÓÊÕÊý¾Ý»º´æ
  45          bit receive_data_finished_flag = 0;             //½ÓÊÕÕâÒ»´®Êý¾ÝÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  46          tByte data_count = 0;                           //½ÓÊÕÊý¾Ý»º´æµÄÎ»Êý£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊý¾Ý
  47          tByte one_receive_byte = 0;             //½ÓÊÕÊý¾ÝµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
  48          tByte one_receive_byte_count = 0;                       //one_receive_byteÓÐ8Î»£¬´Ë¼ÆÊý±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊýµ½8µÄÊ±ºò±íÃ÷
             -Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  49          bit receive_wire_flag = 1;              //½ÓÊÕÍ¨ÐÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅÐ¶ÏP1.1Ò»´Î
             -¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕýÈ·µÄÏÂ½µÑØ
  50          tByte receive_HV_count = 0;             //¶¨Ê±Æ÷T1ÔÚÃ»ÓÐÐÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊý£¬Ò»µ©³¬¹ýÄ³¸öÖµ£¬Ôò½«one_receive
C51 COMPILER V9.51   MAIN                                                                  11/14/2014 13:39:24 PAGE 2   

             -_byte_countÇå0
  51          tByte receive_LV_count = 0;             //Ã¿´Îtimer1Òç³öÊ±ÅÐ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊý¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  52          tByte fell_wire_time=0;          //µ¹µØ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  53          tByte raise_wire_time=0;                        //Ì§Æð¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  54          tWord raised_fell_number = 0;                           //µ¹µØ»òÕßÌ§Æð³ö·¢ºó£¬¼ÆÊý£¬µ½´ïÒ»¶¨ÊýÖµºó£¬½«ÆäÓë±êÖ¾Î»Ò»ÆðÇåÁã¡£
  55          bit raised_fell_once_flag = 0;                  //raised_fell_flagÊÇ·ñÔø¾­±êÖ¾¹ý£¬Èç¹û±êÖ¾¹ýÔòÖÃ1.È»ºóÖ÷»ú±»»Ö¸´µ¹µØ»òÕß»
             -Ö¸´Ì§ÆðÊ±£¬´Ë±êÖ¾Î»¸´Î»¡£
  56          tByte key_rotated_on_flag=0;                    //µç¶¯³µ¿ªÆô¹Ø±Õ±êÖ¾Î»£¬1±íÊ¾µç¶¯³µ¿ªÆôÁË£¬0±íÊ¾µç¶¯³µ¹Ø±ÕÁË
  57          tWord ADC_check_result = 0;             //×÷ÎªAD¼ì²âÖµ
  58          tByte wire_broken_count = 0;            // ×÷Îª¶ÏÏßºóµÄÊ±¼ä¼ì²â
  59          bit battery_stolen_EN = 0;                      // ×÷Îªµç³Ø±»µÁµÄÊ¹ÄÜ¶Ë
  60          tByte battery_stolen_count = 0; // ×÷Îªµç³Ø±»µÁµÄ±¨¾¯´ÎÊý
  61          bit horizontal_vibration = 0;           // ±íÊ¾´¹Ö±´«¸ÐÆ÷ÔÚÕñ¶¯£¬´ËÊ±¾ÍËã¹ØÔ¿³×£¬Ò²²»ÄÜÖ´ÐÐ¹ØÔ¿³×µÄ²Ù×÷¡
  62          tWord horizontal_vibration_count = 0;   //´¹Ö±´«¸ÐÆ÷´¥·¢ºó£¬¶ÔÊ±¼ä½øÐÐ¼ÆÊý¡£
  63          bit vibration_flag = 0;
  64          tWord vibration_count = 0;
  65          bit wire_broken_flag = 0;                       // ¼ô¶ÏËøÏßµÄ±êÖ¾Î»
  66          extern tByte IDkey5;            // ÓÉÇ°5Î»ÃÜÂë×é³ÉµÄÒì»ò
  67          bit IDkey_flag = 0;                     // µ±ID¿¨¿¿½üÊ±ÈÏÖ¤Í¨¹ýºóÖÃ1£¬
  68          tByte IDkey_count = 0;          // ID¿¨ÈÏÖ¤Í¨¹ýºó£¬¼ÆÊ±1·ÖÖÓ£¬Ê¹Ô¿³×ÄÜ×ª¶¯¡£
  69          bit sensor_EN = 0;
  70          tByte enable_sensor_delay_count = 0;            // ´«¸ÐÆ÷ÑÓ³ÙµÄÊ±¼ä
  71          bit sensor_3rdalarm_flag = 0;
  72          bit wheeled_flag = 0;
  73          tWord wheeled_count = 0;
  74          
  75          // ------ Private variable definitions -----------------------------
  76          tWord stolen_alarm_count = 0;
  77          bit battery_HV_flag = 0;
  78          bit raised_alarm_flag = 0;
  79          bit fell_alarm_flag = 0;
  80          bit Host_battery_high_flag = 0;
  81          bit wire_broken_EN = 0;
  82          tWord Mode_detect_count = 0;
  83          bit Mode_select = 0;    // Ä£Ê½Ñ¡Ôñ£¬0±íÊ¾×Ô¶¯Ä£Ê½£¬1±íÊ¾ÊÖ¶¯Ä£Ê½
  84          
  85          bit powersave_enable = 0;
  86          tWord receiver_EN_count = 0;
  87          
  88          bit itrpt_EN = 1;
  89          tByte itrpt_count = 0;
  90          bit idle_EN = 1;
  91          
  92          bit Auto_transmit = 0;                  // 0±íÊ¾·Ç×Ô¶¯·¢ËÍÊý¾Ý£¬1±íÊ¾×Ô¶¯·¢ËÍÊý¾Ý½øÐÐÈÏÖ¤
  93          
  94          /*--------------------------------------------------------------*/
  95          
  96          void main(void)
  97                  {
  98   1              noVoice();
  99   1              InitTimer(50, 100);
 100   1          TR0 = 1;
 101   1      
 102   1              // ¼üÅÌÖÐ¶Ï³õÊ¼»¯
 103   1              press_open_button = 1;
 104   1              press_close_button = 1;
 105   1              
 106   1              KBLS1 |= 0x03;
 107   1              KBLS0 |= 0x03;
 108   1              KBIF &= 0xfc;
 109   1              KBIE |= 0x03;
 110   1              EA = 1;
C51 COMPILER V9.51   MAIN                                                                  11/14/2014 13:39:24 PAGE 3   

 111   1      
 112   1              Moto_EN = 1;            //³õÊ¼»¯£¬¹Ø±ÕÂí´ï
 113   1              transmit_wire = 1;
 114   1              voice_EN = 0;                   //¿ª»úÊ±£¬½«¹¦·Å¹Ø±Õ
 115   1              
 116   1              ADC_check_result = GetADCResult(6);             //ÉÏµçÊ±£¬µç³ØµçÁ¿¼ì²âÒ»´Î
 117   1              
 118   1              stolen_alarm_count = 0;                 //Çå±¨¾¯¼ÆÊýÆ÷
 119   1              stolen_alarm_flag = 0;                  //Çå±¨¾¯±êÖ¾
 120   1      
 121   1              transmiter_EN = 0;              // turn off the transmitter
 122   1              receiver_EN = 0;                // turn on the receiver
 123   1      
 124   1              transceiver_power_enable = 1;         // ÉÏµçÊ±ÎÞÏßÄ£¿éµçÔ´¹Ø±Õ
 125   1              
 126   1              ComMode_Data(ComMode_8, 27);
 127   1      
 128   1              while(1)
 129   1                      {                               
 130   2                      if(idle_EN == 1)
 131   2                              {
 132   3                              EKB = 1;
 133   3                              idle_EN = 0;
 134   3                              PCON |= 0x02;                   
 135   3                              }
 136   2                      
 137   2      //              sEOS_Go_To_Sleep();                     
 138   2                      }  
 139   1              }
 140          
 141          
 142          /*------------------------------------------------------------------
 143                  timerT0()
 144                  ¶¨Ê±Æ÷0Ã¿´ÎÒç³öºóÖ´ÐÐµÄ²Ù×÷
 145          --------------------------------------------------------------------*/
 146          
 147          void timer0() interrupt interrupt_timer_0_overflow
 148                  {
 149   1              // ÖØ×°ÔÚ¶¨Ê±Æ÷µÄÊ±¼äÉèÖÃ
 150   1              TH0 = timer0_8H;
 151   1              TL0 = timer0_8L;
 152   1      
 153   1              // ÉèÖÃÒ»¸öÃ¿3sµÄ²Ù×÷
 154   1              if(++timer0_count >= 60)                
 155   1                      {
 156   2                              
 157   2                      // Ã¿¸ö3s×öÒ»´ÎµçÁ¿¼ì²â£¬²¢½øÐÐÏà¹ØµÄµçÁ¿ÌáÊ¾
 158   2                      ADC_check_result = GetADCResult(6);
 159   2                      
 160   2                      // ÅÐ¶Ïµç³ØµçÑ¹£¬Èç¹ûÐ¡ÓÚ3.4VÇÒÔ­ÏÈ±¨¹ý¸ßµçÑ¹Ê±£¬Ôò±¨µçÁ¿²»×ã¡£Èç¹ûµçÑ¹´óÓÚ4.2VÇÒÓëÔ­ÏÈ±¨¹ýµçÁ¿²»×ãÊ±£¬Ô
             -òÌáÊ¾µçÑ¹¹ý¸ß
 161   2                      if((battery_HV_flag == 1)&&(ADC_check_result <= 0x365))
 162   2                              {
 163   3                              // ´ËÎ»ÖÃ0£¬±íÊ¾µçÁ¿¹ýµÍ
 164   3                              battery_HV_flag = 0;
 165   3                              Battery_low_alarm_speech();             
 166   3                              }
 167   2                      else if((battery_HV_flag == 0)&&(ADC_check_result >= 0x370))
 168   2                              {
 169   3                              // ´ËÎ»ÖÃ1£¬±íÊ¾µçÁ¿¹ý¸ß
 170   3                              battery_HV_flag = 1;
 171   3                              Battery_high_alarm_speech();
C51 COMPILER V9.51   MAIN                                                                  11/14/2014 13:39:24 PAGE 4   

 172   3                              }       
 173   2      
 174   2                      // ½«¼ÆÊýÇå0
 175   2                      timer0_count = 0;
 176   2                      }
 177   1                      
 178   1              if(press_open_button == 0)
 179   1                      {
 180   2                      transceiver_power_enable = 0;
 181   2                      RXD = 1;
 182   2                      ComMode_Data(ComMode_7, 27);            
 183   2                      }
 184   1              
 185   1              if(press_close_button == 0)
 186   1                      {
 187   2                      transceiver_power_enable = 0;
 188   2                      RXD = 1;
 189   2                      ComMode_Data(ComMode_8, 27);
 190   2                      }
 191   1      
 192   1              if(toggle_button == 1)
 193   1                      {
 194   2                      transceiver_power_enable = 1;
 195   2                      receiver_EN = 0;
 196   2                      transmiter_EN = 0;
 197   2                      RXD = 0;
 198   2                      TXD = 0;
 199   2                      idle_EN = 1;
 200   2                      }
 201   1                              
 202   1              // Ö÷»ú±»µÁ±¨¾¯
 203   1              if(stolen_alarm_flag == 1)              
 204   1                      {
 205   2                      // Ö÷»ú±»µÁ±¨¾¯´ÎÊý£¬Ã¿±¨Ò»´Î¼Ó1£¬Èç¹û´óÓÚ2´Î£¬Ôò¼ÌÐø¼Ó1£¬µ½Ò»¶¨Ê±¼äºó£¬½«flagºÍcountÇå0.ÒÔ´ËÀ´±£Ö¤¸½»úÃ
             -¿´Î±¨¾¯ºó£¬ÔÚ¶ÌÊ±¼äÄÚ
 206   2                      // ÔÙ´ÎÊÕµ½±¨¾¯ÐÅºÅ£¬¾Í²»»á±¨¾¯ÁË¡£
 207   2                      if(++stolen_alarm_count < 3)
 208   2                              {                       
 209   3                              // ÓïÒôÌáÊ¾£¬Âí´ïÕñ¶¯
 210   3                              Alarm_stolen_speech();          
 211   3                              Moto_Vibration();          
 212   3                              }
 213   2                      else
 214   2                              {
 215   3                              if(stolen_alarm_count >= 120)
 216   3                                      {
 217   4                                      stolen_alarm_count = 0;
 218   4                                      stolen_alarm_flag = 0;
 219   4                                      }
 220   3                              }
 221   2                      }       
 222   1      
 223   1              // Ì§ÆðÐÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌÐø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´ÎÌ§ÆðÖ»·¢4±é¡£
 224   1              if(raised_alarm_flag == 1)      
 225   1                      {
 226   2                      Alarm_raised_speech();          
 227   2                      Moto_Vibration();         
 228   2                      raised_alarm_flag = 0;
 229   2                      }
 230   1      
 231   1              // µ¹µØÐÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌÐø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´Îµ¹µØÖ»·¢4±é¡£
 232   1              if(fell_alarm_flag == 1)
C51 COMPILER V9.51   MAIN                                                                  11/14/2014 13:39:24 PAGE 5   

 233   1                      {
 234   2                      Alarm_fell_speech();              
 235   2                      Moto_Vibration();         
 236   2                      fell_alarm_flag=0;
 237   2                      }
 238   1      
 239   1              // Ö÷»úµçÁ¿³äÂúÌáÊ¾
 240   1              if(Host_battery_high_flag == 1)
 241   1                      {
 242   2                      Host_battery_high_alarm_speech();               
 243   2                      Host_battery_high_flag = 0;
 244   2                      }
 245   1                      
 246   1              if(battery_stolen_EN == 1)
 247   1                      {
 248   2                      battery_stolen_speech_F3();
 249   2                      battery_stolen_EN = 0;
 250   2                      }
 251   1              
 252   1              if(wire_broken_EN == 1)
 253   1                      {
 254   2                      wire_broken_speech();
 255   2                      wire_broken_EN = 0;
 256   2                      }
 257   1              }
 258          
 259          /*------------------------------------------------------------------
 260                  timerT1()
 261                  ¶¨Ê±Æ÷1Ã¿´ÎÒç³öºóÖ´ÐÐµÄ²Ù×÷
 262          --------------------------------------------------------------------*/
 263                  
 264          void timerT1() interrupt interrupt_timer_1_overflow                     
 265                  {
 266   1              // ÖØ×°ÔÚ¶¨Ê±Æ÷1µÄÉèÖÃ
 267   1              TH1 = timer1_8H;                                
 268   1              TL1 = timer1_8L;
 269   1      
 270   1              // receive a tyte
 271   1              receive_byte();
 272   1              
 273   1              // receive a word after every byte
 274   1              receive_word();
 275   1      
 276   1              if(receive_data_finished_flag==1)       //ËµÃ÷½ÓÊÕµ½ÁËÊý¾Ý£¬¿ªÊ¼´¦Àí
 277   1                      {
 278   2                      receive_data_finished_flag=0;   //Çå½ÓÊÕ±êÖ¾
 279   2                      switch(received_data_buffer[2])//½âÎöÖ¸Áî
 280   2                              {
 281   3                              case ComMode_1://½ÓÊÕµ½µÄÊÇÖ÷»ú·¢ËÍ¹ýÀ´µÄ±àÂë1µÄÐÅºÅ£¬ËµÃ÷Ö÷»úÔÚ3MÄÚ£¬ÊÇÕý³£µÄ
 282   3                                      {       
 283   4                                      Moto_Vibration();
 284   4                                      ComMode_Data(ComMode_1, 42);
 285   4                                      }
 286   3                              break;
 287   3                              
 288   3                              case ComMode_2:
 289   3                                      {
 290   4                                      battery_stolen_EN = 1;
 291   4                                      Moto_Vibration();          
 292   4                                      }
 293   3                         break;
 294   3                              
C51 COMPILER V9.51   MAIN                                                                  11/14/2014 13:39:24 PAGE 6   

 295   3                              case ComMode_3:
 296   3                                      {
 297   4                                      stolen_alarm_flag = 1;
 298   4                                      Moto_Vibration();         
 299   4      
 300   4                                      raised_alarm_count=0;
 301   4                                      raised_alarm_flag=0;
 302   4                                      fell_alarm_count=0;
 303   4                                      fell_alarm_flag=0;
 304   4                                      }
 305   3                              break;
 306   3                      
 307   3                              case ComMode_4:
 308   3                                      {
 309   4                                      raised_alarm_flag=1;
 310   4      
 311   4                                      stolen_alarm_count=0;
 312   4                                      stolen_alarm_flag=0;
 313   4                                      fell_alarm_count=0;
 314   4                                      fell_alarm_flag=0;
 315   4                                      }
 316   3                              break;
 317   3      
 318   3                              case ComMode_5:
 319   3                                      {
 320   4                                      fell_alarm_flag=1;      
 321   4      
 322   4                                      stolen_alarm_count=0;
 323   4                                      stolen_alarm_flag=0;
 324   4                                      raised_alarm_count=0;
 325   4                                      raised_alarm_flag=0;
 326   4                                      }
 327   3                              break;
 328   3      
 329   3                              case ComMode_6:
 330   3                                      {
 331   4                                      wire_broken_EN = 1;
 332   4                                      Moto_Vibration();
 333   4                                      }
 334   3                              break;
 335   3                              
 336   3                              case ComMode_7:
 337   3                                      {
 338   4                                      lock_rotated_on_speech();
 339   4                                      }
 340   3                              break;
 341   3      
 342   3                              case ComMode_8:
 343   3                                      {
 344   4                                      Moto_Vibration();                               
 345   4                                      Mode_select = 0;
 346   4                                      }
 347   3                              break;
 348   3                              
 349   3                              case ComMode_9:
 350   3                                      {
 351   4                                      lock_rotated_off_speech();
 352   4                                      }
 353   3                              break;
 354   3      
 355   3                              case ComMode_10:
 356   3                                      {
C51 COMPILER V9.51   MAIN                                                                  11/14/2014 13:39:24 PAGE 7   

 357   4                                      Moto_Vibration();                               
 358   4                                      Mode_select = 1;
 359   4                                      }
 360   3                              break;
 361   3                              }
 362   2                      }
 363   1              }
 364          
 365          /*-----------------------------------------------------------
 366                  KBI_ISR()
 367                  ¼üÅÌÖÐ¶Ï£¬Ê¹Ð¾Æ¬´ÓÊ¡µçÄ£Ê½ÖÐ»½ÐÑ
 368          -----------------------------------------------------------*/
 369          void KBI_ISR(void) interrupt 7
 370                  {
 371   1              EKB = 0;
 372   1              KBIF &= 0xfc;
 373   1              EKB = 1;
 374   1              }
 375                          
 376          /*---------------------------------------------------
 377                  end of file
 378          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    577    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     54    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     28    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
