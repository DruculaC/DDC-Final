C51 COMPILER V9.51   MAIN                                                                  12/22/2014 11:22:24 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE main.c COMPACT ROM(COMPACT) BROWSE INCDIR(..\Library) D
                    -EBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*---------------------------------------------------
   2             main.c (v1.00)
   3             
   4             DDC-F program, for electrocar.
   5          ----------------------------------------------------*/
   6          
   7          #include "main.h"             
   8          #include "port.h"
   9          
  10          #include "AD.h"
  11          #include "Timer.h"
  12          #include "voice.h"
  13          #include "pwm.h"
  14          #include "Delay.h"
  15          #include "communication.h"
  16          #include "Other.h"
  17          
  18          /*------- Public variable declarations --------------------------*/
  19          extern tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;
  20          extern bit enable_sensor_delayEN;
  21          
  22          bit stolen_alarm_flag = 0;             // when host been touch 3 times, this flag 1 before alarm voice present, no
             -t to detect sensor for 1st voice alarm.
  23          bit position_sensor_EN=0;        //Î»ÖÃ´«¸ĞÆ÷£¬¼´µ¹µØÌ§Æğ´«¸ĞÆ÷×Ü¿ª¹Ø£¬1µÄÊ±ºò£¬¼ì²âÕâÁ½¸ö´«¸ĞÆ÷
  24          bit host_stolen_alarm1_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒôÊ¹ÄÜ
  25          bit host_stolen_alarm2_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒôÊ¹ÄÜ
  26          tByte host_stolen_alarm1_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒô´ÎÊı
  27          tByte host_stolen_alarm2_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒô´ÎÊı
  28          bit fell_flag=0;                 //ÅĞ¶ÏÖ÷»úµ¹ÏÂºó£¬ÖÃ1
  29          bit raised_flag=0;               //ÅĞ¶ÏÖ÷»ú±»Ì§Æğºó£¬ÖÃ1
  30          tByte sensor_2ndstage_count = 0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶Î¼ì²âÊ±£¬¼ÆËãµÍµçÆ½µÄÊ±¼ä
  31          tWord sensor_3rdstage_time = 0;        //´«¸ĞÆ÷½øÈëµÚÈı½×¶ÎµÄÊ±¼ä£¬
  32          tByte sensor_3rdstage_effcount = 0;    //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬ÓĞĞ§´¥Åö´ÎÊıµÄ¼ÆÊı
  33          tByte sensor_3rdstage_count = 0;       //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬µÍµçÆ½µÄ¼ÆÊı
  34          tWord sensor_3rdstage_interval = 0;    //´«¸ĞÆ÷ÔÚµÚÈı½×¶ÎÖĞ£¬Ã¿´ÎÓĞĞ§µÍµçÆ½¼ÆÊıÖ®¼äµÄÊ±¼ä¼ä¸ô¡£ÔÚÕâÆÚ¼äµÄµÍµ
             -çÆ½²»ÈÏÎªÓĞĞ§¡£
  35          bit raised_fell_flag = 0;              //µ¹µØ»òÕßÌ§Æğ´¥·¢ºó£¬´Ë±êÖ¾Î»ÖÃ1
  36          tByte sensor_trigger_count=0;    //´«¸ĞÆ÷´¥·¢¼ÆÊı
  37          tWord sensor_2ndstage_time=0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶ÎºóÁ÷ÊÅÊ±¼äµÄ¼ÆÊı
  38          tByte sensor_1ststage_count=0;   //´«¸ĞÆ÷µÚÒ»½×¶ÎÅĞ¶ÏµÍµçÆ½µÄ¼ÆÊı
  39          tByte nearby_away_interval = 0;     //¸½»úÀë¿ªºÍ¿¿½üÊ±£¬ÓïÒôÌáÊ¾ºÍ¿ª¹ØËøµÄÊ±¼ä¼ä¸ô
  40          
  41          tByte raised_alarm_count = 0;    //Ö÷»ú±»Ì§Æğºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  42          tByte fell_alarm_count=0;        //Ö÷»úµ¹µØºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  43          tWord timer0_count=0;      // counter for timer0, increment every ticket         
  44          tByte received_data_buffer[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};     //½ÓÊÕÊı¾İ»º´æ
  45          bit receive_data_finished_flag = 0;    //½ÓÊÕÕâÒ»´®Êı¾İÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  46          tByte data_count = 0;            //½ÓÊÕÊı¾İ»º´æµÄÎ»Êı£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊı¾İ
  47          tByte one_receive_byte = 0;      //½ÓÊÕÊı¾İµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
  48          tByte one_receive_byte_count = 0;         //one_receive_byteÓĞ8Î»£¬´Ë¼ÆÊı±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊıµ½8µÄÊ±ºò±íÃ÷
             -Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  49          bit receive_wire_flag = 1;    //½ÓÊÕÍ¨ĞÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅĞ¶ÏP1.1Ò»´Î
             -¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕıÈ·µÄÏÂ½µÑØ
  50          tByte receive_HV_count = 0;      //¶¨Ê±Æ÷T1ÔÚÃ»ÓĞĞÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊı£¬Ò»µ©³¬¹ıÄ³¸öÖµ£¬Ôò½«one_receive
C51 COMPILER V9.51   MAIN                                                                  12/22/2014 11:22:24 PAGE 2   

             -_byte_countÇå0
  51          tByte receive_LV_count = 0;      //Ã¿´Îtimer1Òç³öÊ±ÅĞ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊı¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  52          tByte fell_wire_time=0;          //µ¹µØ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  53          tByte raise_wire_time=0;         //Ì§Æğ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  54          tWord raised_fell_number = 0;          //µ¹µØ»òÕßÌ§Æğ³ö·¢ºó£¬¼ÆÊı£¬µ½´ïÒ»¶¨ÊıÖµºó£¬½«ÆäÓë±êÖ¾Î»Ò»ÆğÇåÁã¡£
  55          bit raised_fell_once_flag = 0;         //raised_fell_flagÊÇ·ñÔø¾­±êÖ¾¹ı£¬Èç¹û±êÖ¾¹ıÔòÖÃ1.È»ºóÖ÷»ú±»»Ö¸´µ¹µØ»òÕß»
             -Ö¸´Ì§ÆğÊ±£¬´Ë±êÖ¾Î»¸´Î»¡£
  56          tByte key_rotated_on_flag=0;        //µç¶¯³µ¿ªÆô¹Ø±Õ±êÖ¾Î»£¬1±íÊ¾µç¶¯³µ¿ªÆôÁË£¬0±íÊ¾µç¶¯³µ¹Ø±ÕÁË
  57          tWord ADC_check_result = 0;      //×÷ÎªAD¼ì²âÖµ
  58          tByte wire_broken_count = 0;     // ×÷Îª¶ÏÏßºóµÄÊ±¼ä¼ì²â
  59          bit battery_stolen_EN = 0;       // ×÷Îªµç³Ø±»µÁµÄÊ¹ÄÜ¶Ë
  60          tByte battery_stolen_count = 0;  // ×÷Îªµç³Ø±»µÁµÄ±¨¾¯´ÎÊı
  61          bit horizontal_vibration = 0;    // ±íÊ¾´¹Ö±´«¸ĞÆ÷ÔÚÕñ¶¯£¬´ËÊ±¾ÍËã¹ØÔ¿³×£¬Ò²²»ÄÜÖ´ĞĞ¹ØÔ¿³×µÄ²Ù×÷¡
  62          tWord horizontal_vibration_count = 0;  //´¹Ö±´«¸ĞÆ÷´¥·¢ºó£¬¶ÔÊ±¼ä½øĞĞ¼ÆÊı¡£
  63          bit vibration_flag = 0;
  64          tWord vibration_count = 0;
  65          bit wire_broken_flag = 0;        // ¼ô¶ÏËøÏßµÄ±êÖ¾Î»
  66          bit IDkey_flag = 0;        // µ±ID¿¨¿¿½üÊ±ÈÏÖ¤Í¨¹ıºóÖÃ1£¬
  67          tByte IDkey_count = 0;     // ID¿¨ÈÏÖ¤Í¨¹ıºó£¬¼ÆÊ±1·ÖÖÓ£¬Ê¹Ô¿³×ÄÜ×ª¶¯¡£
  68          bit sensor_EN = 0;
  69          tByte enable_sensor_delay_count = 0;      // ´«¸ĞÆ÷ÑÓ³ÙµÄÊ±¼ä
  70          bit sensor_3rdalarm_flag = 0;
  71          bit wheeled_flag = 0;
  72          tWord wheeled_count = 0;
  73          
  74          // ------ Private variable definitions -----------------------------
  75          tWord stolen_alarm_count = 0;
  76          bit battery_HV_flag = 0;
  77          bit raised_alarm_flag = 0;
  78          bit fell_alarm_flag = 0;
  79          bit Host_battery_high_flag = 0;
  80          bit wire_broken_EN = 0;
  81          tWord Mode_detect_count = 0;
  82          bit Mode_select = 0; // Ä£Ê½Ñ¡Ôñ£¬0±íÊ¾×Ô¶¯Ä£Ê½£¬1±íÊ¾ÊÖ¶¯Ä£Ê½
  83          
  84          bit powersave_enable = 0;
  85          tWord receiver_EN_count = 0;
  86          
  87          bit itrpt_EN = 1;
  88          tByte itrpt_count = 0;
  89          bit idle_EN = 1;
  90          
  91          bit Auto_transmit = 0;        // 0±íÊ¾·Ç×Ô¶¯·¢ËÍÊı¾İ£¬1±íÊ¾×Ô¶¯·¢ËÍÊı¾İ½øĞĞÈÏÖ¤
  92          
  93          /*--------------------------------------------------------------*/
  94          
  95          void main(void)
  96             {
  97   1         noVoice();
  98   1         InitTimer(50, 100);
  99   1         TR0 = 1;
 100   1      
 101   1         // ¼üÅÌÖĞ¶Ï³õÊ¼»¯
 102   1         press_open_button = 1;
 103   1         press_close_button = 1;
 104   1         
 105   1         KBLS1 |= 0x03;
 106   1         KBLS0 |= 0x03;
 107   1         KBIF &= 0xfc;
 108   1         KBIE |= 0x03;
 109   1         EA = 1;
 110   1      
C51 COMPILER V9.51   MAIN                                                                  12/22/2014 11:22:24 PAGE 3   

 111   1         Moto_EN = 1;      //³õÊ¼»¯£¬¹Ø±ÕÂí´ï
 112   1         transmit_wire = 1;
 113   1         voice_EN = 0;        //¿ª»úÊ±£¬½«¹¦·Å¹Ø±Õ
 114   1         
 115   1         ADC_check_result = GetADCResult(6);    //ÉÏµçÊ±£¬µç³ØµçÁ¿¼ì²âÒ»´Î
 116   1         
 117   1         stolen_alarm_count = 0;       //Çå±¨¾¯¼ÆÊıÆ÷
 118   1         stolen_alarm_flag = 0;        //Çå±¨¾¯±êÖ¾
 119   1      
 120   1         transmiter_EN = 0;      // turn off the transmitter
 121   1         receiver_EN = 0;     // turn on the receiver
 122   1      
 123   1         transceiver_power_enable = 1;         // ÉÏµçÊ±ÎŞÏßÄ£¿éµçÔ´¹Ø±Õ
 124   1         
 125   1         ComMode_Data(ComMode_8, 13);
 126   1      
 127   1         while(1)
 128   1            {           
 129   2            if(idle_EN == 1)
 130   2               {
 131   3               EKB = 1;
 132   3               idle_EN = 0;
 133   3      //       PCON |= 0x02;        
 134   3               }
 135   2            
 136   2      //    sEOS_Go_To_Sleep();        
 137   2            }  
 138   1         }
 139          
 140          
 141          /*------------------------------------------------------------------
 142             timerT0()
 143             ¶¨Ê±Æ÷0Ã¿´ÎÒç³öºóÖ´ĞĞµÄ²Ù×÷
 144          --------------------------------------------------------------------*/
 145          
 146          void timer0() interrupt interrupt_timer_0_overflow
 147             {
 148   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷µÄÊ±¼äÉèÖÃ
 149   1         TH0 = timer0_8H;
 150   1         TL0 = timer0_8L;
 151   1      
 152   1         // ÉèÖÃÒ»¸öÃ¿3sµÄ²Ù×÷
 153   1         if(++timer0_count >= 60)      
 154   1            {
 155   2               
 156   2            // Ã¿¸ö3s×öÒ»´ÎµçÁ¿¼ì²â£¬²¢½øĞĞÏà¹ØµÄµçÁ¿ÌáÊ¾
 157   2            ADC_check_result = GetADCResult(6);
 158   2            
 159   2            // ÅĞ¶Ïµç³ØµçÑ¹£¬Èç¹ûĞ¡ÓÚ3.4VÇÒÔ­ÏÈ±¨¹ı¸ßµçÑ¹Ê±£¬Ôò±¨µçÁ¿²»×ã¡£Èç¹ûµçÑ¹´óÓÚ4.2VÇÒÓëÔ­ÏÈ±¨¹ıµçÁ¿²»×ãÊ±£¬Ô
             -òÌáÊ¾µçÑ¹¹ı¸ß
 160   2            if((battery_HV_flag == 1)&&(ADC_check_result <= 0x365))
 161   2               {
 162   3               // ´ËÎ»ÖÃ0£¬±íÊ¾µçÁ¿¹ıµÍ
 163   3               battery_HV_flag = 0;
 164   3               Battery_low_alarm_speech();      
 165   3               }
 166   2            else if((battery_HV_flag == 0)&&(ADC_check_result >= 0x370))
 167   2               {
 168   3               // ´ËÎ»ÖÃ1£¬±íÊ¾µçÁ¿¹ı¸ß
 169   3               battery_HV_flag = 1;
 170   3               Battery_high_alarm_speech();
 171   3               }  
C51 COMPILER V9.51   MAIN                                                                  12/22/2014 11:22:24 PAGE 4   

 172   2      
 173   2            // ½«¼ÆÊıÇå0
 174   2            timer0_count = 0;
 175   2            }
 176   1            
 177   1         if(press_open_button == 0)
 178   1            {
 179   2            transceiver_power_enable = 0;
 180   2            RXD = 1;
 181   2            ComMode_Data(ComMode_7, 13);     
 182   2            }
 183   1         
 184   1         if(press_close_button == 0)
 185   1            {
 186   2            transceiver_power_enable = 0;
 187   2            RXD = 1;
 188   2            ComMode_Data(ComMode_8, 13);
 189   2            }
 190   1      
 191   1         if(toggle_button == 1)
 192   1            {
 193   2            transceiver_power_enable = 1;
 194   2            receiver_EN = 0;
 195   2            transmiter_EN = 0;
 196   2            RXD = 0;
 197   2            TXD = 0;
 198   2            idle_EN = 1;
 199   2            }
 200   1               
 201   1         // Ö÷»ú±»µÁ±¨¾¯
 202   1         if(stolen_alarm_flag == 1)    
 203   1            {
 204   2            // Ö÷»ú±»µÁ±¨¾¯´ÎÊı£¬Ã¿±¨Ò»´Î¼Ó1£¬Èç¹û´óÓÚ2´Î£¬Ôò¼ÌĞø¼Ó1£¬µ½Ò»¶¨Ê±¼äºó£¬½«flagºÍcountÇå0.ÒÔ´ËÀ´±£Ö¤¸½»úÃ
             -¿´Î±¨¾¯ºó£¬ÔÚ¶ÌÊ±¼äÄÚ
 205   2            // ÔÙ´ÎÊÕµ½±¨¾¯ĞÅºÅ£¬¾Í²»»á±¨¾¯ÁË¡£
 206   2            if(++stolen_alarm_count < 3)
 207   2               {        
 208   3               // ÓïÒôÌáÊ¾£¬Âí´ïÕñ¶¯
 209   3               Alarm_stolen_speech();     
 210   3               Moto_Vibration();          
 211   3               }
 212   2            else
 213   2               {
 214   3               if(stolen_alarm_count >= 120)
 215   3                  {
 216   4                  stolen_alarm_count = 0;
 217   4                  stolen_alarm_flag = 0;
 218   4                  }
 219   3               }
 220   2            }  
 221   1      
 222   1         // Ì§ÆğĞÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌĞø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´ÎÌ§ÆğÖ»·¢4±é¡£
 223   1         if(raised_alarm_flag == 1) 
 224   1            {
 225   2            Alarm_raised_speech();     
 226   2            Moto_Vibration();         
 227   2            raised_alarm_flag = 0;
 228   2            }
 229   1      
 230   1         // µ¹µØĞÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌĞø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´Îµ¹µØÖ»·¢4±é¡£
 231   1         if(fell_alarm_flag == 1)
 232   1            {
C51 COMPILER V9.51   MAIN                                                                  12/22/2014 11:22:24 PAGE 5   

 233   2            Alarm_fell_speech();      
 234   2            Moto_Vibration();         
 235   2            fell_alarm_flag=0;
 236   2            }
 237   1      
 238   1         // Ö÷»úµçÁ¿³äÂúÌáÊ¾
 239   1         if(Host_battery_high_flag == 1)
 240   1            {
 241   2            Host_battery_high_alarm_speech();      
 242   2            Host_battery_high_flag = 0;
 243   2            }
 244   1            
 245   1         if(battery_stolen_EN == 1)
 246   1            {
 247   2            battery_stolen_speech_F3();
 248   2            battery_stolen_EN = 0;
 249   2            }
 250   1         
 251   1         if(wire_broken_EN == 1)
 252   1            {
 253   2            wire_broken_speech();
 254   2            wire_broken_EN = 0;
 255   2            }
 256   1         }
 257          
 258          /*------------------------------------------------------------------
 259             timerT1()
 260             ¶¨Ê±Æ÷1Ã¿´ÎÒç³öºóÖ´ĞĞµÄ²Ù×÷
 261          --------------------------------------------------------------------*/
 262             
 263          void timerT1() interrupt interrupt_timer_1_overflow         
 264             {
 265   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷1µÄÉèÖÃ
 266   1         TH1 = timer1_8H;           
 267   1         TL1 = timer1_8L;
 268   1      
 269   1         // receive a tyte
 270   1         receive_byte();
 271   1         
 272   1         // receive a word after every byte
 273   1         receive_word();
 274   1      
 275   1         if(receive_data_finished_flag==1)   //ËµÃ÷½ÓÊÕµ½ÁËÊı¾İ£¬¿ªÊ¼´¦Àí
 276   1            {
 277   2            receive_data_finished_flag=0; //Çå½ÓÊÕ±êÖ¾
 278   2            switch(received_data_buffer[2])//½âÎöÖ¸Áî
 279   2               {
 280   3               case ComMode_1://½ÓÊÕµ½µÄÊÇÖ÷»ú·¢ËÍ¹ıÀ´µÄ±àÂë1µÄĞÅºÅ£¬ËµÃ÷Ö÷»úÔÚ3MÄÚ£¬ÊÇÕı³£µÄ
 281   3                  {  
 282   4                  Moto_Vibration();
 283   4                  ComMode_Data(ComMode_1, 21);
 284   4                  }
 285   3               break;
 286   3               
 287   3               case ComMode_2:
 288   3                  {
 289   4                  battery_stolen_EN = 1;
 290   4                  Moto_Vibration();          
 291   4                  }
 292   3               break;
 293   3               
 294   3               case ComMode_3:
C51 COMPILER V9.51   MAIN                                                                  12/22/2014 11:22:24 PAGE 6   

 295   3                  {
 296   4                  stolen_alarm_flag = 1;
 297   4                  Moto_Vibration();         
 298   4      
 299   4                  raised_alarm_count=0;
 300   4                  raised_alarm_flag=0;
 301   4                  fell_alarm_count=0;
 302   4                  fell_alarm_flag=0;
 303   4                  }
 304   3               break;
 305   3            
 306   3               case ComMode_4:
 307   3                  {
 308   4                  raised_alarm_flag=1;
 309   4      
 310   4                  stolen_alarm_count=0;
 311   4                  stolen_alarm_flag=0;
 312   4                  fell_alarm_count=0;
 313   4                  fell_alarm_flag=0;
 314   4                  }
 315   3               break;
 316   3      
 317   3               case ComMode_5:
 318   3                  {
 319   4                  fell_alarm_flag=1;   
 320   4      
 321   4                  stolen_alarm_count=0;
 322   4                  stolen_alarm_flag=0;
 323   4                  raised_alarm_count=0;
 324   4                  raised_alarm_flag=0;
 325   4                  }
 326   3               break;
 327   3      
 328   3               case ComMode_6:
 329   3                  {
 330   4                  wire_broken_EN = 1;
 331   4                  Moto_Vibration();
 332   4                  }
 333   3               break;
 334   3               
 335   3               case ComMode_7:
 336   3                  {
 337   4                  lock_rotated_on_speech();
 338   4                  }
 339   3               break;
 340   3      
 341   3               case ComMode_8:
 342   3                  {
 343   4                  Moto_Vibration();                   
 344   4                  Mode_select = 0;
 345   4                  }
 346   3               break;
 347   3               
 348   3               case ComMode_9:
 349   3                  {
 350   4                  lock_rotated_off_speech();
 351   4                  }
 352   3               break;
 353   3      
 354   3               case ComMode_10:
 355   3                  {
 356   4                  Moto_Vibration();                   
C51 COMPILER V9.51   MAIN                                                                  12/22/2014 11:22:24 PAGE 7   

 357   4                  Mode_select = 1;
 358   4                  }
 359   3               break;
 360   3               }
 361   2            }
 362   1         }
 363          
 364          /*-----------------------------------------------------------
 365             KBI_ISR()
 366             ¼üÅÌÖĞ¶Ï£¬Ê¹Ğ¾Æ¬´ÓÊ¡µçÄ£Ê½ÖĞ»½ĞÑ
 367          -----------------------------------------------------------*/
 368          void KBI_ISR(void) interrupt 7
 369             {
 370   1         EKB = 0;
 371   1         KBIF &= 0xfc;
 372   1         EKB = 1;
 373   1         }
 374                
 375          /*---------------------------------------------------
 376             end of file
 377          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    602    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     54    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     28    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
